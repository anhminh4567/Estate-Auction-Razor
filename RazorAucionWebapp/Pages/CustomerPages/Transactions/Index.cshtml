@page
@using Repository.Database.Model.Enum;
@model RazorAucionWebapp.Pages.CustomerPages.Transactions.IndexModel

@{
    ViewData["Title"] = "Transaction History";
}

<style>
    /* Center the title */
    h1 {
        text-align: center;
        color: #333; /* Dark gray color */
        margin-top: 20px; /* Add margin top */
        margin-bottom: 20px; /* Add margin bottom */
    }

    /* Style for alternating row colors */
    .table-striped tbody tr:nth-of-type(odd) {
        background-color: #f2f2f2; /* Light gray background color */
    }

    /* Style for thead */
    .thead-dark {
        background-color: #000; /* Black background color */
        color: #fff; /* White text color */
    }

    /* Style for table cells */
    td, th {
        padding: 10px; /* Add padding to cells */
        text-align: center; /* Center align text */
        border-bottom: 1px solid #ddd; /* Gray border bottom */
    }

    th {
        border-right: 1px solid #ddd; /* Gray border right */
    }

    td {
        border-left: 1px solid #ddd; /* Gray border left */
    }

    /* Style for the refund buttons */
    .btn-refund {
        background-color: #dc3545; /* Red color */
        border-color: #dc3545; /* Red color */
    }

    .btn-refund:hover {
        background-color: #c82333; /* Darker red color on hover */
        border-color: #bd2130; /* Darker red color on hover */
    }
</style>

<div class="container">
    <h1>Transaction History</h1>

    <div class="table-responsive">
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>Status</th>
                    <th>Transaction Reference</th>
                    <th>Amount</th>
                    <th>Transaction Date</th>
                    <th>Order Info</th>
                    <th>Payment Date</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Transactions)
                {
                            <tr>
                                <td>@item.Status</td>
                                <td>@item.vnp_TxnRef</td>
                                <td>@item.vnp_Amount</td>
                                <td>@DateTime.ParseExact(item.vnp_TransactionDate.ToString(), "yyyyMMddHHmmss", null).ToString("dd/MM/yyyy HH:mm:ss")</td>
                                <td>@item.vnp_OrderInfo</td>
                                <td>@DateTime.ParseExact(item.vnp_PayDate.ToString(), "yyyyMMddHHmmss", null).ToString("dd/MM/yyyy HH:mm:ss")</td>
                                <td>
                            @{
                                DateTime.TryParseExact(item.vnp_PayDate.ToString(), "yyyyMMddHHmmss", null, System.Globalization.DateTimeStyles.None, out var payDate);
                                var refundTime = payDate.AddMinutes(Model.RefundValidTime);
                                if (refundTime <= DateTime.Now || item.Status == TransactionStatus.CANCELLED)
                                {
                                                            <button class="btn btn-danger disabled" disabled>Refund</button>
                                }
                                else
                                {
                                                            <a class="btn btn-refund" asp-page="../../Vnpay/Refund" asp-route-transactionId="@item.TransactionId" asp-route-accountId="@Model._userId">Refund</a>
                                }
                            }
                                </td>
                            </tr>
                }
            </tbody>
        </table>
    </div>
</div>
